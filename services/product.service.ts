import { API_CONFIG } from "@/config/api.config"
import type { ApiProduct, Product, Category } from "@/models/product.model"
import { HttpService } from "./http.service"
import { ImageService } from "./image.service"

export class ProductService {
  // Спортивные категории
  private static sportsCategories: Category[] = [
    { id: 1, name: "Футбол", image: ImageService.getCategoryImageUrl("Футбол") },
    { id: 2, name: "Баскетбол", image: ImageService.getCategoryImageUrl("Баскетбол") },
    { id: 3, name: "Хоккей", image: ImageService.getCategoryImageUrl("Хоккей") },
    { id: 4, name: "Теннис", image: ImageService.getCategoryImageUrl("Теннис") },
    { id: 5, name: "Плавание", image: ImageService.getCategoryImageUrl("Плавание") },
    { id: 6, name: "Бег", image: ImageService.getCategoryImageUrl("Бег") },
    { id: 7, name: "Велоспорт", image: ImageService.getCategoryImageUrl("Велоспорт") },
    { id: 8, name: "Фитнес", image: ImageService.getCategoryImageUrl("Фитнес") },
  ]

  // Спортивные товары для каждой категории
  private static sportsProducts: Record<string, string[]> = {
    Футбол: ["Футбольный мяч", "Бутсы", "Футбольная форма", "Вратарские перчатки", "Щитки"],
    Баскетбол: [
      "Баскетбольный мяч",
      "Баскетбольные кроссовки",
      "Баскетбольная форма",
      "Баскетбольное кольцо",
      "Напульсники",
    ],
    Хоккей: ["Хоккейная клюшка", "Коньки", "Шлем", "Хоккейная форма", "Шайба"],
    Теннис: ["Теннисная ракетка", "Теннисные мячи", "Теннисная форма", "Кроссовки для тенниса", "Напульсники"],
    Плавание: ["Плавательные очки", "Купальник", "Плавки", "Шапочка для плавания", "Ласты"],
    Бег: ["Беговые кроссовки", "Спортивный костюм", "Фитнес-трекер", "Спортивные шорты", "Компрессионная одежда"],
    Велоспорт: ["Велосипед", "Велошлем", "Велоперчатки", "Велоформа", "Велообувь"],
    Фитнес: ["Гантели", "Коврик для йоги", "Скакалка", "Фитнес-резинки", "Спортивный костюм"],
  }

  // Описания для спортивных товаров (аренда)
  private static productDescriptions: Record<string, string> = {
    "Футбольный мяч":
      "Профессиональный футбольный мяч для тренировок и соревнований. Доступен для аренды на день, неделю или месяц. Идеально для разовых мероприятий и турниров.",
    Бутсы:
      "Футбольные бутсы с шипами для игры на натуральном газоне. Различные размеры в наличии. Аренда включает дезинфекцию после каждого использования.",
    "Футбольная форма":
      "Комплект футбольной формы: футболка, шорты и гетры. Доступны разные размеры и цвета. Идеально для командных мероприятий.",
    "Вратарские перчатки":
      "Профессиональные вратарские перчатки с защитой пальцев. Отличное сцепление с мячом. Аренда включает чистку после возврата.",
    Щитки: "Футбольные щитки для защиты голени. Легкие и прочные. Доступны детские и взрослые размеры.",

    "Баскетбольный мяч":
      "Баскетбольный мяч для игры в зале и на улице. Отличное сцепление и контроль. Доступен для аренды на любой срок.",
    "Баскетбольные кроссовки":
      "Высокие баскетбольные кроссовки с амортизацией и поддержкой голеностопа. Различные размеры. Аренда включает дезинфекцию.",
    "Баскетбольная форма":
      "Комплект баскетбольной формы: майка и шорты. Свободный крой для комфортных движений. Идеально для турниров и тренировок.",
    "Баскетбольное кольцо":
      "Переносное баскетбольное кольцо с сеткой. Стандартный размер. Доставка и установка включены в стоимость аренды.",
    Напульсники:
      "Эластичные напульсники для защиты запястий во время игры. Комплект из двух штук. Доступны разные цвета.",

    "Хоккейная клюшка":
      "Профессиональная хоккейная клюшка из композитных материалов. Легкая и прочная. Доступны модели для правшей и левшей.",
    Коньки:
      "Хоккейные коньки с усиленной защитой и комфортной посадкой. Различные размеры. Аренда включает заточку лезвий.",
    Шлем: "Хоккейный шлем с защитной решеткой. Надежная защита головы. Регулируемый размер для комфортной посадки.",
    "Хоккейная форма":
      "Полный комплект хоккейной формы: свитер, шорты, гетры. Защита от ударов и порезов. Доступны разные размеры.",
    Шайба: "Официальная хоккейная шайба для игры на льду. Аренда включает комплект из 5 шайб.",

    "Теннисная ракетка":
      "Профессиональная теннисная ракетка с оптимальным балансом силы и контроля. Доступны модели для начинающих и профессионалов.",
    "Теннисные мячи": "Набор теннисных мячей для игры на всех типах кортов. Аренда включает комплект из 12 мячей.",
    "Теннисная форма":
      "Комплект теннисной формы: поло и шорты/юбка. Свобода движений и отвод влаги. Различные размеры.",
    "Кроссовки для тенниса":
      "Специальные кроссовки для тенниса с поддержкой стопы при боковых движениях. Аренда включает дезинфекцию.",

    "Плавательные очки":
      "Водонепроницаемые очки для плавания с защитой от УФ-лучей. Регулируемый ремешок для комфортной посадки.",
    Купальник: "Спортивный купальник для тренировок и соревнований. Устойчив к хлору. Различные размеры и модели.",
    Плавки: "Спортивные плавки для тренировок и соревнований. Устойчивы к хлору. Доступны разные размеры.",
    "Шапочка для плавания": "Силиконовая шапочка для плавания. Защищает волосы от хлора. Универсальный размер.",
    Ласты: "Тренировочные ласты для плавания. Увеличивают скорость и силу ног. Доступны различные размеры.",

    "Беговые кроссовки":
      "Легкие беговые кроссовки с амортизацией для длительных пробежек. Различные размеры. Аренда включает дезинфекцию.",
    "Спортивный костюм":
      "Комплект спортивной одежды для бега: куртка и брюки. Защита от ветра и дождя. Доступны разные размеры.",
    "Фитнес-трекер":
      "Умный браслет для отслеживания активности, пульса и качества сна. Аренда включает зарядное устройство.",
    "Спортивные шорты": "Легкие беговые шорты с внутренним карманом для ключей. Различные размеры и модели.",
    "Компрессионная одежда":
      "Компрессионная футболка для улучшения кровообращения и снижения усталости мышц. Доступны разные размеры.",

    Велосипед:
      "Горный велосипед с алюминиевой рамой и дисковыми тормозами. Аренда включает шлем, замок и базовый набор инструментов.",
    Велошлем: "Легкий велосипедный шлем с вентиляцией и регулировкой размера. Обеспечивает надежную защиту головы.",
    Велоперчатки: "Велосипедные перчатки с амортизацией для комфортной езды. Различные размеры. Защита от мозолей.",
    Велоформа:
      "Комплект велосипедной формы: джерси и шорты с памперсом. Отводит влагу и обеспечивает комфорт при длительных поездках.",
    Велообувь: "Специальная обувь для велоспорта с жесткой подошвой и креплением для педалей. Различные размеры.",

    Гантели: "Набор разборных гантелей для домашних тренировок. Аренда включает различные веса от 1 до 10 кг.",
    "Коврик для йоги": "Нескользящий коврик для йоги и фитнеса. Легко моется и дезинфицируется после каждого клиента.",
    Скакалка: "Скоростная скакалка для кардиотренировок. Регулируемая длина для пользователей любого роста.",
    "Фитнес-резинки":
      "Набор эластичных лент разного сопротивления для тренировки всех групп мышц. Комплект из 5 резинок.",
    "Спортивный костюм":
      "Комплект спортивной одежды для фитнеса: футболка и шорты. Отвод влаги и свобода движений. Различные размеры.",
  }

  // Информация о депозите для товаров
  private static productDeposits: Record<string, number> = {
    Велосипед: 5000,
    "Хоккейная форма": 3000,
    "Теннисная ракетка": 2000,
    "Баскетбольное кольцо": 3000,
    "Фитнес-трекер": 2000,
  }

  // Количество доступных товаров
  private static productAvailability: Record<string, number> = {
    "Футбольный мяч": 15,
    Бутсы: 20,
    "Футбольная форма": 10,
    "Вратарские перчатки": 8,
    Щитки: 12,
    "Баскетбольный мяч": 18,
    "Баскетбольные кроссовки": 15,
    "Баскетбольная форма": 10,
    "Баскетбольное кольцо": 5,
    Напульсники: 25,
    "Хоккейная клюшка": 20,
    Коньки: 15,
    Шлем: 12,
    "Хоккейная форма": 8,
    Шайба: 30,
    "Теннисная ракетка": 15,
    "Теннисные мячи": 20,
    "Теннисная форма": 10,
    "Кроссовки для тенниса": 12,
    "Плавательные очки": 25,
    Купальник: 15,
    Плавки: 15,
    "Шапочка для плавания": 30,
    Ласты: 20,
    "Беговые кроссовки": 18,
    "Спортивный костюм": 12,
    "Фитнес-трекер": 10,
    "Спортивные шорты": 20,
    "Компрессионная одежда": 15,
    Велосипед: 8,
    Велошлем: 15,
    Велоперчатки: 20,
    Велоформа: 10,
    Велообувь: 12,
    Гантели: 15,
    "Коврик для йоги": 25,
    Скакалка: 30,
    "Фитнес-резинки": 20,
  }

  // Преобразование данных из API в нашу модель спортивных товаров для аренды
  private static mapApiProductToSportsProduct(apiProduct: ApiProduct, index: number): Product {
    // Определяем категорию для продукта
    const categoryIndex = index % this.sportsCategories.length
    const category = this.sportsCategories[categoryIndex].name

    // Определяем название продукта из списка для данной категории
    const productIndex = index % this.sportsProducts[category].length
    const productName = this.sportsProducts[category][productIndex]

    // Получаем описание и изображение продукта
    const description = this.productDescriptions[productName] || apiProduct.description
    const image = ImageService.getProductImageUrl(productName, category)

    // Базовая цена из API (в долларах)
    const basePrice = apiProduct.price

    // Рассчитываем цены аренды (конвертируем в рубли)
    const dailyRentalPrice = Math.round(basePrice * 10) // Дневная аренда
    const weeklyRentalPrice = Math.round(dailyRentalPrice * 5) // Недельная аренда (скидка 30%)
    const monthlyRentalPrice = Math.round(dailyRentalPrice * 15) // Месячная аренда (скидка 50%)

    // Получаем информацию о депозите и доступности
    const deposit = this.productDeposits[productName] || 0
    const availableCount = this.productAvailability[productName] || 0

    return {
      id: apiProduct.id,
      name: productName,
      price: basePrice * 80, // Оставляем для совместимости, но не используем
      dailyRentalPrice,
      weeklyRentalPrice,
      monthlyRentalPrice,
      description,
      category,
      image,
      rating: apiProduct.rating.rate,
      reviewCount: apiProduct.rating.count,
      deposit,
      availableCount,
    }
  }

  // Получение всех продуктов
  static async getProducts(): Promise<Product[]> {
    try {
      const url = `${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.PRODUCTS}`
      const apiProducts = await HttpService.get<ApiProduct[]>(url, API_CONFIG.HEADERS)

      return apiProducts.map((product, index) => this.mapApiProductToSportsProduct(product, index))
    } catch (error) {
      console.error("Failed to fetch products:", error)
      throw error
    }
  }

  // Получение продукта по ID
  static async getProductById(id: number): Promise<Product> {
    try {
      const url = `${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.PRODUCT_BY_ID(id)}`
      const apiProduct = await HttpService.get<ApiProduct>(url, API_CONFIG.HEADERS)

      return this.mapApiProductToSportsProduct(apiProduct, id)
    } catch (error) {
      console.error(`Failed to fetch product with ID ${id}:`, error)
      throw error
    }
  }

  // Получение категорий
  static async getCategories(): Promise<Category[]> {
    try {
      // Возвращаем предопределенные спортивные категории
      return Promise.resolve([...this.sportsCategories])
    } catch (error) {
      console.error("Failed to fetch categories:", error)
      throw error
    }
  }

  // Получение продуктов по категории
  static async getProductsByCategory(category: string): Promise<Product[]> {
    try {
      // Получаем все продукты
      const allProducts = await this.getProducts()

      // Фильтруем по запрошенной категории
      return allProducts.filter((product) => product.category === category)
    } catch (error) {
      console.error(`Failed to fetch products for category ${category}:`, error)
      throw error
    }
  }

  // Форматирование цены аренды
  static formatRentalPrice(price: number): string {
    return new Intl.NumberFormat("ru-RU", {
      style: "currency",
      currency: "RUB",
      minimumFractionDigits: 0,
      maximumFractionDigits: 0,
    }).format(price)
  }
}

